name: CMake

on: [push]

env:
  BUILD_TYPE_TEST: Release
  BUILD_TYPE_COVERAGE: RelWithDebInfo

defaults:
  run:
    shell: bash
    working-directory: bin

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install libraries
      working-directory: ${{runner.workspace}}
      run: sudo apt-get install libwxbase3.0-dev libnetcdf-dev tree

    - name: Create Build Environment
      working-directory: ${{runner.workspace}}
      run: cmake -E make_directory ${{runner.workspace}}/bin

    - name: Configure CMake
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE_TEST

    - name: Build
      run: cmake --build . --config $BUILD_TYPE_TEST

    - name: List directory content
      run: tree .

    - name: Test
      run: tests/flhy-tests

  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install libraries
        working-directory: ${{runner.workspace}}
        run: sudo apt-get install libwxbase3.0-dev libnetcdf-dev tree lcov

      - name: Create Build Environment
        working-directory: ${{runner.workspace}}
        run: cmake -E make_directory ${{runner.workspace}}/bin

      - name: Configure CMake
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE_COVERAGE -DUSE_CODECOV=1

      - name: Build
        run: cmake --build . --config $BUILD_TYPE_COVERAGE --target=flhy-coverage

      - name: Code coverage
        run: |
          lcov --directory . --capture --output-file coverage.info &> /dev/null
          lcov --remove coverage.info '/usr/*' '*/external/*' '*/tests/*' --output-file coverage.info --quiet
          lcov --list coverage.info

      - name: Sending to Codecov
        run: bash <(curl -s https://codecov.io/bash) > /dev/null || echo "Codecov did not collect coverage reports"
