name: CMake

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: Release

    steps:
    - uses: actions/checkout@v2

    - name: Install libraries
      run: sudo apt-get install libwxbase3.0-dev libnetcdf-dev tree

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/bin

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/bin
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/bin
      run: cmake --build . --config $BUILD_TYPE

    - name: Copy test files
      working-directory: ${{runner.workspace}}
      run: cp -R flhy/tests/files/ bin/tests

    - name: List directory content
      working-directory: ${{runner.workspace}}/bin
      run: tree .

    - name: Test
      working-directory: ${{runner.workspace}}/bin
      run: tests/flhy-tests

  code-coverage:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: RelWithDebInfo
      CODECOV_TOKEN: "7e5ffe21-e668-4910-a2ed-bd6477933127"

    steps:
      - uses: actions/checkout@v2

      - name: Install libraries
        run: sudo apt-get install libwxbase3.0-dev libnetcdf-dev tree lcov

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/bin

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/bin
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DUSE_CODECOV=1

      - name: Copy test files
        working-directory: ${{runner.workspace}}
        run: cp -R flhy/tests/files/ bin/tests

      - name: Build
        working-directory: ${{runner.workspace}}/bin
        run: cmake --build . --config $BUILD_TYPE --target flhy-coverage

      - name: Code coverage
        working-directory: ${{runner.workspace}}/bin
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '_deps/*' 'bin/_deps/*' '*/tests/*' --output-file coverage.info --quiet
          lcov --list coverage.info

      - name: List directory content
        working-directory: ${{runner.workspace}}
        run: tree .

      - name: Sending to Codecov
        working-directory: ${{runner.workspace}}/flhy
        run: bash <(curl -s https://codecov.io/bash) -v || echo "Codecov did not collect coverage reports"
