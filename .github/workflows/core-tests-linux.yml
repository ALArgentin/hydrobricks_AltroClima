name: Core Tests Linux

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: Release

    steps:
    - uses: actions/checkout@v2

    - name: Install libraries
      run: sudo apt-get install tree python

    - name: Cache Conan libs
      id: cache-conan
      uses: actions/cache@v3
      with:
        path: /home/runner/.conan
        key: ${{ runner.os }}-conan

    - name: Setup conan
      run: |
        if ${{ grep -q "Version" <<< $(pip show conan) }}; then
          echo "Conan already installed."
        else
          pip install conan
          conan profile new default --detect
        fi
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan config set general.revisions_enabled=1
        conan remote add gitlab https://gitlab.com/api/v4/packages/conan

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/bin

    - name: Get dependencies
      working-directory: ${{github.workspace}}/bin
      run: conan install .. --build=missing

    - name: Configure CMake
      working-directory: ${{github.workspace}}/bin
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/bin
      run: cmake --build . --config $BUILD_TYPE

    - name: Copy test files
      working-directory: ${{github.workspace}}
      run: cp -R core/tests/files/ bin/bin/

    - name: List directory content
      working-directory: ${{github.workspace}}
      run: tree .

    - name: Test
      working-directory: ${{github.workspace}}/bin
      run: bin/hydrobricks-tests

  code-coverage:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: RelWithDebInfo
      CODECOV_TOKEN: "7e5ffe21-e668-4910-a2ed-bd6477933127"

    steps:
      - uses: actions/checkout@v2

      - name: Install libraries
        run: sudo apt-get install tree lcov python

      - name: Cache Conan libs
        id: cache-conan
        uses: actions/cache@v3
        with:
          path: /home/runner/.conan
          key: ${{ runner.os }}-conan

      - name: Setup conan
        run: |
          if ${{ grep -q "Version" <<< $(pip show conan) }}; then
          echo "Conan already installed."
          else
          pip install conan
          conan profile new default --detect
          fi
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan config set general.revisions_enabled=1
          conan remote add gitlab https://gitlab.com/api/v4/packages/conan

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/bin

      - name: Get dependencies
        working-directory: ${{github.workspace}}/bin
        run: conan install .. --build=missing

      - name: Configure CMake
        working-directory: ${{github.workspace}}/bin
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DUSE_CODECOV=1

      - name: Copy test files
        working-directory: ${{github.workspace}}
        run: cp -R core/tests/files/ bin/tests

      - name: Build and run code coverage
        working-directory: ${{github.workspace}}/bin
        run: cmake --build . --config $BUILD_TYPE --target hydrobricks-coverage

      - name: Display code coverage report
        working-directory: ${{github.workspace}}/bin
        run: lcov --list hydrobricks-coverage.info

      - name: Sending to Codecov
        working-directory: ${{github.workspace}}/bin
        run: bash <(curl -s https://codecov.io/bash) -f hydrobricks-coverage.info || echo "Codecov did not collect coverage reports"
